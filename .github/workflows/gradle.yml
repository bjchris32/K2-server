# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: K2-server CI/CD

on:
  push:
    branches: [ master ]

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: AWS 설정
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: cp applicaiton.yml from S3
        run: aws s3 cp --region ap-northeast-2 --acl private s3://tm-s3-githubaction/application.yml ./src/main/resources/application.yml

      - name: Build with Gradle
        run: ./gradlew clean build

      - name: mkdir deploy
        run: mkdir deploy

      - name: cp jar
        run: cp ./build/libs/*.jar ./deploy/

      - name: cp appspec.yml
        run : cp ./appspec.yml ./deploy/

      - name: cp deploy.sh
        run : cp ./deploy.sh ./deploy/


      - name: zip -r springboot-build.zip
        run: zip -r -qq -j ./springboot-build.zip ./deploy

      - name: S3 업로드
        run: aws s3 cp --region ap-northeast-2 --acl private ./springboot-build.zip s3://tm-s3-githubaction/server/

      - name: Code Deploy
        run: aws deploy create-deployment --application-name TM-codedeploy  --deployment-config-name CodeDeployDefault.OneAtATime --deployment-group-name TM-codedeploy-group  --s3-location bucket=tm-s3-githubaction,bundleType=zip,key=server/springboot-build.zip